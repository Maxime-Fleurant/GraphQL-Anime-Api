# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Anime {
  bannerImage: String
  characters: [Character]!
  desciption: String
  englishTitle: String
  externalLinks: [ExternalLink]!
  genres: [Genre]!
  id: ID!
  largeCoverImage: String
  nativeTitle: String
  popularity: Float!
  reviews: [Review]!
  romajiTitle: String
  studio: Studio!
  tags: [Tag]!
  trailer: String!
  xLargeCoverImage: String
}

input BaseAnimeInput {
  bannerImage: String
  desciption: String
  englishTitle: String
  genreIds: [Float]
  largeCoverImage: String
  nativeTitle: String
  popularity: Float!
  romajiTitle: String
  studioId: Float!
  tagIds: [Float]
  trailer: String!
  xLargeCoverImage: String
}

input BaseCharacterInput {
  description: String!
  name: String!
}

type Character {
  anime: Anime!
  description: String!
  id: ID!
  name: String!
}

input CharacterInput {
  animeId: Float!
  description: String!
  name: String!
}

input CreateReviewInput {
  animeId: Float!
  body: String!
  score: Float!
  summary: String!
  userId: Float!
}

input CreateUserInput {
  name: String!
  password: String!
}

type ExternalLink {
  site: String!
  url: String!
}

input ExternalLinkInput {
  animeId: Float
  site: String!
  url: String!
}

type Genre {
  id: ID!
  name: String!
}

type LoginResult {
  token: String
}

type Mutation {
  addGenreFromAnime(animeId: Float!, genreIds: [Float!]!): Anime!
  createAnime(animeData: BaseAnimeInput!, charactersData: [BaseCharacterInput!], externalLinkData: [ExternalLinkInput!]): Anime!
  createCharacter(characterData: CharacterInput!): Character!
  createReview(input: CreateReviewInput!): Review!
  createStudio(studioName: String!): Studio!
  createUser(input: CreateUserInput!): User!
  deleteAnime(id: String!): String!
  deleteCharacter(id: String!): String!
  deleteReview(id: String!): String!
  deleteStudio(id: String!): String!
  deleteUser(id: String!): String!
  removeGenreFromAnime(animeId: Float!, genreIds: [Float!]!): Anime!
  updateAnime(animeId: Float!, updateData: UpdateAnimeInput!): Anime!
  updateCharacter(characterData: UpdateCharacterInput!, characterId: Float!): Character!
  updateReview(id: Float!, input: UpdateReviewInput!): Review!
}

type Query {
  Anime(id: String!): Anime!
  Animes: [Anime!]!
  Character(id: String!): Character!
  Characters: [Character!]!
  login(name: String!, password: String!): LoginResult!
  Review(id: String!): Review!
  Reviews: [Review!]!
  Studio(id: String!): Studio!
  Studios: [Studio!]!
  User(id: String!): User!
  Users: [User!]!
}

type Review {
  animeId: ID!
  body: String!
  id: ID!
  summary: String!
}

type Studio {
  id: ID!
  name: String!
}

type Tag {
  description: String!
  id: ID!
  name: String!
}

input UpdateAnimeInput {
  bannerImage: String
  desciption: String
  englishTitle: String
  largeCoverImage: String
  nativeTitle: String
  popularity: Float
  romajiTitle: String
  studioId: Float
  trailer: String
  xLargeCoverImage: String
}

input UpdateCharacterInput {
  description: String
  name: String
}

input UpdateReviewInput {
  body: String
  score: Float
  summary: String
}

type User {
  id: ID!
  name: String!
  reviews: [Review!]!
}
